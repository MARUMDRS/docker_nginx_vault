events {}

http {
upstream back_side {
  ip_hash;
  zone back_side 64k;
  server vaultwarden:80; #docker resolves the server hostname from container_name (as written in docker-compose.yml/can be checked with <sudo docker ps -a>)
  keepalive 2;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      "";
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name your-server.lab;

    if ($host = your-server.lab) {
        return 301 https://$host$request_uri;
    }
    return 404;
}

server {
    listen 443 ssl;
    http2 on;
    server_name your-server.lab;

    # Specify SSL Config when needed
    ssl_certificate /etc/ssl/self.crt;
    ssl_certificate_key /etc/ssl/self.key; 

    
    client_max_body_size 525M;

    location / {
      #added header served to the client to test, that it works
      add_header nginx_header ServedByProxy; 
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://back_side;
    }

    # Optionally add extra authentication besides the ADMIN_TOKEN
    # Remove the comments below `#` and create the htpasswd_file to have it active
    #
    location /admin {
      auth_basic "Admin Side:";
      auth_basic_user_file /etc/nginx/adminpage/;
    
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    
      proxy_pass http://back_side;
    }
}
}
